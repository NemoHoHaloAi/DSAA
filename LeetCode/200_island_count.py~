class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """

        count = 0
        for i in range(len(grid)):
            for j in range(len(grid[0])):
                if grid[i][j] == '1':
                    print(i,j)
                    print('+1')
                    count += 1
                    grid[i][j] = '0'
                    checks = [(i,j+1)] if j<len(grid[0])-1 else []
                    checks += [(i+1,j)] if i<len(grid)-1 else []
                    while len(checks)>0:
                        tmp = []
                        for k in range(len(checks)):
                            ij = checks[k]
                            if grid[ij[0]][ij[1]] == '1':
                                grid[ij[0]][ij[1]] = '0'
                                tmp += [(i,j+1)] if j<len(grid[0])-1 else []
                                tmp += [(i+1,j)] if i<len(grid)-1 else []
                        checks = tmp
                else:
                    pass

        return count
for row in [["1","1","1","1","0"],["1","1","0","1","0"],["1","1","0","0","0"],["0","0","0","0","0"]]:
    print(' '.join(row))
print(Solution().numIslands([["1","1","1","1","0"],["1","1","0","1","0"],["1","1","0","0","0"],["0","0","0","0","0"]]))
